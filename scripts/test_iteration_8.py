#!/usr/bin/env python3
"""
Test script for Iteration 8: Admin Panel + Lifecycle Fix
–¢–µ—Å—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤–æ—Å—å–º–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º backend –≤ –ø—É—Ç—å
backend_path = Path(__file__).parent.parent / "backend"
sys.path.insert(0, str(backend_path))

def test_lifecycle_structure():
    """–¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã lifecycle –º–æ–¥—É–ª–µ–π"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã lifecycle –º–æ–¥—É–ª–µ–π...")
    
    required_files = [
        "backend/app/core/lifecycle/__init__.py",
        "backend/app/core/lifecycle/manager.py",
        "backend/app/workers/lifecycle_tasks.py",
        "backend/app/api/lifecycle.py",
        "scripts/test_lifecycle.py"
    ]
    
    missing_files = []
    for file_path in required_files:
        if not os.path.exists(file_path):
            missing_files.append(file_path)
    
    if missing_files:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {missing_files}")
        return False
    
    print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ lifecycle –º–æ–¥—É–ª–µ–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
    return True

def test_admin_panel_structure():
    """–¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...")
    
    required_files = [
        "frontend/src/pages/AdminPage.tsx"
    ]
    
    missing_files = []
    for file_path in required_files:
        if not os.path.exists(file_path):
            missing_files.append(file_path)
    
    if missing_files:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏: {missing_files}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ AdminPage –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ App.tsx
    try:
        with open("frontend/src/App.tsx", "r") as f:
            app_content = f.read()
        
        if "AdminPage" not in app_content:
            print("‚ùå AdminPage –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –≤ App.tsx")
            return False
            
        if "admin" not in app_content.lower():
            print("‚ùå –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –Ω–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏—é")
            return False
        
        print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏: {e}")
        return False

def test_lifecycle_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ lifecycle –º–æ–¥—É–ª–µ–π"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ lifecycle –º–æ–¥—É–ª–µ–π...")
    
    try:
        # –¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤ (–±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)
        from app.models.token import TokenStatus, StatusChangeReason
        
        print("‚úÖ Token —Å—Ç–∞—Ç—É—Å—ã –∏ –ø—Ä–∏—á–∏–Ω—ã –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤
        with open("backend/app/core/lifecycle/manager.py", "r") as f:
            manager_content = f.read()
        
        required_methods = [
            "monitor_initial_tokens",
            "monitor_active_tokens_lifecycle",
            "_should_activate_token",
            "_should_archive_by_timeout",
            "_should_deactivate_by_score"
        ]
        
        for method in required_methods:
            if f"def {method}" not in manager_content:
                print(f"‚ùå –ú–µ—Ç–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω: {method}")
                return False
        
        print("‚úÖ Lifecycle –º–µ—Ç–æ–¥—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã")
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ lifecycle –º–æ–¥—É–ª–µ–π: {e}")
        return False

def test_celery_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Celery"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Celery...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∫–ª—é—á–µ–Ω–∏–µ –≤ Celery
        with open("backend/app/core/celery_app.py", "r") as f:
            celery_content = f.read()
        
        if "app.workers.lifecycle_tasks" not in celery_content:
            print("‚ùå Lifecycle tasks –Ω–µ –≤–∫–ª—é—á–µ–Ω—ã –≤ Celery")
            return False
            
        required_tasks = [
            "monitor-initial-tokens",
            "monitor-active-lifecycle", 
            "fetch-initial-tokens-metrics"
        ]
        
        for task in required_tasks:
            if task not in celery_content:
                print(f"‚ùå Task –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ schedule: {task}")
                return False
        
        print("‚úÖ Celery –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Celery: {e}")
        return False

def test_api_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ API"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ API...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é lifecycle —Ä–æ—É—Ç–µ—Ä–∞
        with open("backend/app/main.py", "r") as f:
            main_content = f.read()
        
        if "lifecycle_router" not in main_content:
            print("‚ùå Lifecycle —Ä–æ—É—Ç–µ—Ä –Ω–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ main.py")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoints
        with open("backend/app/api/lifecycle.py", "r") as f:
            api_content = f.read()
        
        required_endpoints = [
            "@router.get(\"/status\")",
            "@router.post(\"/monitor-initial\")",
            "@router.post(\"/force-status-change\")",
            "@router.get(\"/config\")",
            "@router.put(\"/config/{key}\")"
        ]
        
        for endpoint in required_endpoints:
            if endpoint not in api_content:
                print(f"‚ùå Endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω: {endpoint}")
                return False
        
        print("‚úÖ API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ API: {e}")
        return False

def test_frontend_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º HomePage
        with open("frontend/src/pages/HomePage.tsx", "r") as f:
            home_content = f.read()
        
        if "onNavigateToAdmin" not in home_content:
            print("‚ùå HomePage –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤ –∞–¥–º–∏–Ω–∫—É")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Header
        with open("frontend/src/components/Header.tsx", "r") as f:
            header_content = f.read()
        
        if "onNavigateToAdmin" not in header_content:
            print("‚ùå Header –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É –∞–¥–º–∏–Ω–∫–∏")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º AdminPage
        with open("frontend/src/pages/AdminPage.tsx", "r") as f:
            admin_content = f.read()
        
        if "system/config" not in admin_content:
            print("‚ùå AdminPage –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç system config API")
            return False
            
        if "lifecycle" not in admin_content.lower():
            print("‚ùå AdminPage –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç lifecycle —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å")
            return False
        
        print("‚úÖ Frontend –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ frontend: {e}")
        return False

def test_configuration_coverage():
    """–¢–µ—Å—Ç –ø–æ–∫—Ä—ã—Ç–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∫—Ä—ã—Ç–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –§–ó –µ—Å—Ç—å –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        with open("backend/alembic/versions/20250914_0004_initial_config.py", "r") as f:
            config_content = f.read()
        
        required_params = [
            "MIN_LIQUIDITY_USD",
            "MIN_TX_COUNT",
            "ARCHIVAL_TIMEOUT_HOURS", 
            "LOW_SCORE_HOURS",
            "LOW_ACTIVITY_CHECKS",
            "SCORING_WEIGHTS",
            "EWMA_ALPHA",
            "MIN_SCORE_THRESHOLD"
        ]
        
        for param in required_params:
            if param not in config_content:
                print(f"‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ initial config: {param}")
                return False
        
        print("‚úÖ –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ–∫—Ä—ã—Ç—ã")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    """
    print("üß™ –¢–ï–°–¢ –ì–û–¢–û–í–ù–û–°–¢–ò –ò–¢–ï–†–ê–¶–ò–ò 8")
    print("=" * 50)
    
    tests = [
        ("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ lifecycle –º–æ–¥—É–ª–µ–π", test_lifecycle_structure),
        ("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏", test_admin_panel_structure),
        ("–ò–º–ø–æ—Ä—Ç lifecycle –º–æ–¥—É–ª–µ–π", test_lifecycle_imports),
        ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Celery", test_celery_integration),
        ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è API", test_api_integration),
        ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è frontend", test_frontend_integration),
        ("–ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏", test_configuration_coverage),
    ]
    
    passed = 0
    failed = 0
    
    for test_name, test_func in tests:
        print(f"\nüîÑ {test_name}...")
        try:
            if test_func():
                passed += 1
            else:
                failed += 1
        except Exception as e:
            print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ç–µ—Å—Ç–µ {test_name}: {e}")
            failed += 1
    
    print("\n" + "=" * 50)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´: {passed} –ø—Ä–æ—à–ª–æ, {failed} –Ω–µ –ø—Ä–æ—à–ª–æ")
    
    if failed == 0:
        print("üéâ –ò–¢–ï–†–ê–¶–ò–Ø 8 –ì–û–¢–û–í–ê –ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ!")
        print("\n–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
        print("1. uvicorn app.main:app --host 0.0.0.0 --port 8000 (–∏–∑ –ø–∞–ø–∫–∏ backend)")
        print("2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ lifecycle:")
        print("   python3 scripts/test_lifecycle.py --mode quick")
        print("3. –û—Ç–∫—Ä–æ–π—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:")
        print("   http://localhost:3000 -> –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
        print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API endpoints:")
        print("   - GET /api/lifecycle/status")
        print("   - GET /api/lifecycle/config")
        print("   - POST /api/lifecycle/monitor-initial")
        print("   - GET /api/lifecycle/transitions")
        print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ Celery:")
        print("   journalctl -u tothemoon2-celery-beat -f | grep lifecycle (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω systemd)")
        print("\nüö® –ö–†–ò–¢–ò–ß–ù–û: –¢–µ–ø–µ—Ä—å Initial —Ç–æ–∫–µ–Ω—ã –º–æ–Ω–∏—Ç–æ—Ä—è—Ç—Å—è!")
        print("   - Initial —Ç–æ–∫–µ–Ω—ã: –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç")
        print("   - –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏ ‚â•$500 + TX ‚â•300")
        print("   - –ê—Ä—Ö–∏–≤–∞—Ü–∏—è —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞")
        return True
    else:
        print("‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
